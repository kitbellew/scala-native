name: Publish
on:
  workflow_dispatch:

env:
  LAST_PUBLISHED_TAG: last-nightly-published

jobs:
  load_tag:
    name: Check last nightly tag
    outputs:
      skip: ${{ steps.check.outputs.skip }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v5

      - name: Check if there are changes since last run
        id: check
        run: |
          if [ \
            "${{ github.event_name }}" = "push" -a \
            "${{ github.ref_type }}" = "tag" \
          ] || ! git fetch origin ${LAST_PUBLISHED_TAG} 2> /dev/null
          then # if this is a tag push or the tag does not exist
            echo "skip=false" >> $GITHUB_OUTPUT
          else
            PREV_SHA=$(git rev-parse --verify refs/tags/${LAST_PUBLISHED_TAG})
            echo "Previous SHA: $PREV_SHA"
            echo "Current  SHA: $GITHUB_SHA"

            if [ "$PREV_SHA" = "$GITHUB_SHA" ]; then
              echo "No changes since last run."
              echo "skip=true" >> $GITHUB_OUTPUT
            else
              echo "skip=false" >> $GITHUB_OUTPUT
            fi
          fi

  check-compiles:
    name: Test compilation of all modules
    runs-on: ubuntu-22.04
    needs: [load_tag]
    if: needs.load_tag.outputs.skip == 'false' # repository check is done in load_tag
    steps:
      - name: Compile everything
        run: echo "compiling"

  publish:
    name: Publish for each Scala binary version
    runs-on: ubuntu-22.04
    needs: [check-compiles]
    strategy:
      fail-fast: false
      matrix:
        scala: ["2.12", "2.13", "3"]
    steps:
      - name: Publish release
        run: echo "Publishing for Scala ${{ matrix.scala }}"

  save_tag:
    name: Save SHA as last published tag
    runs-on: ubuntu-22.04
    needs: [publish]
    steps:
      - uses: actions/checkout@v5

      - name: Tag commit as ${LAST_PUBLISHED_TAG}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -f ${LAST_PUBLISHED_TAG} $GITHUB_SHA
          git push origin -f ${LAST_PUBLISHED_TAG}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dispatch:
    name: Dispatch trigger builds for dependant projects
    runs-on: ubuntu-latest
    needs: [publish]
    steps:
      - run: echo "Triggering dependant projects"
